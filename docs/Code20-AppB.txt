■リストB.1::男女別の年齢ランキング（飛び番あり）を降順に出力するSELECT文
SELECT name,
       sex,
       age,
       RANK() OVER(PARTITION BY sex ORDER BY age DESC) rnk_desc
  FROM Address;

■リストB.2::相関サブクエリを使った解
INSERT INTO Sales2 
SELECT company,
       year,
       sale,
       CASE SIGN(sale - (SELECT MAX(sale)  -- 直前のレコードと売り上げを比較
                           FROM Sales S2
                          WHERE S1.company = S2.company
                            AND S1.year > S2.year ))
       WHEN 0  THEN '='
       WHEN 1  THEN '+'
       WHEN -1 THEN '-'
       ELSE NULL END AS var
  FROM Sales S1;

■リストB.3::昇順と降順それぞれでソートしたROW_NUMBERの結果
SELECT student_id,
       weight, 
       ROW_NUMBER() OVER (ORDER BY weight ASC)  AS hi,
       ROW_NUMBER() OVER (ORDER BY weight DESC) AS lo
  FROM Weights;

■リストB.4::NOT NULL制約の列も更新可能なUPDATE文
UPDATE ScoreRowsNN
   SET score = (SELECT COALESCE(CASE ScoreRowsNN.subject 
                                     WHEN '英語' THEN score_en
                                     WHEN '国語' THEN score_nl
                                     WHEN '数学' THEN score_mt
                                     ELSE NULL
                                 END, 0)
                  FROM ScoreCols
                 WHERE student_id = ScoreRowsNN.student_id);

■リストB.5::NOT NULL制約の列も更新可能なUPDATE文：その2
UPDATE ScoreRowsNN
   SET score = COALESCE((SELECT CASE ScoreRowsNN.subject 
                                     WHEN '英語' THEN score_en
                                     WHEN '国語' THEN score_nl
                                     WHEN '数学' THEN score_mt
                                     ELSE NULL
                                 END
                  FROM ScoreCols
                 WHERE student_id = ScoreRowsNN.student_id), 0);

